@using DnTeam.Models
@model ProjectModel

@{
    ViewBag.Title = Resources.Labels.Projects_Details_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@Resources.Labels.Projects_Details_Title</h2>

@using (Html.BeginForm())
{
    <div class="editLine" style="padding-bottom: 30px;">
        <div class="editElement">
            <div class="editor-label">
                @Html.LabelFor(model => model.Priority)
            </div>
            <div class="editor-field">
                @(Html.Telerik().DropDownListFor(model => model.Priority).BindTo(ViewData["ProjectPriorityTypes"] as SelectList)
                    .ClientEvents(events => events.OnChange("onChangeDropDownValue")))
            </div>
        </div>
        <div class="editElement">
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
            </div>
        </div>
        <div class="editElement">
            <div class="editor-label">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="editor-field">
                @(Html.Telerik().DropDownListFor(model => model.Status).BindTo(ViewData["ProjectStatuses"] as SelectList)
                    .ClientEvents(events => events.OnChange("onChangeDropDownValue")))
            </div>
        </div>
        <div class="editElement">
            <div class="editor-label">
                @Html.LabelFor(model => model.Type)
            </div>
            <div class="editor-field">
                @(Html.Telerik().DropDownListFor(model => model.Type).BindTo(ViewData["ProjectTypes"] as SelectList)
                    .ClientEvents(events => events.OnChange("onChangeDropDownValue")))
            </div>
        </div>
        <div class="editElement">
            <div class="editor-label">
                @Html.LabelFor(model => model.Noise)
            </div>
            <div class="editor-field">
                @(Html.Telerik().DropDownListFor(model => model.Noise).BindTo(ViewData["ProjectNoiseTypes"] as SelectList)
                    .ClientEvents(events => events.OnChange("onChangeDropDownValue")))
            </div>
        </div>
        <div class="editElement">
            <div class="editor-label">
                @Html.LabelFor(model => model.ProductId)
            </div>
            <div class="editor-field">
                @(Html.Telerik().DropDownListFor(model => model.ProductId).BindTo(ViewData["Products"] as SelectList)
                    .ClientEvents(events => events.OnChange("onChangeDropDownValue")))
            </div>
        </div>
    </div>
   
 }


<h3>@Resources.Labels.Milestone_Title</h3>
@Html.Partial("MilestoneGrid", Model)

<h3>@Resources.Labels.Assignment_Title</h3>
@Html.Partial("AssignmentsGrid", Model)

@section HeadScripts {
 <script type="text/javascript">
     function postUpdate(elem, val) {
         $.post('@Url.Action("UpdateProjectProperty", "Project")', { id: '@(Model.Id)', name: $(elem).attr("id"), value: val }, function (data) {
             var parentdiv = $(elem).closest(".editor-field");
             if (data == null) {
                 showOk(parentdiv);
             } else {
                 showError(parentdiv, data);
             }
         }, 'json');
     }

     function onChangeDropDownValue(e) {
         postUpdate($(e.target), e.value);
     }

     $().ready(function () {
         $("#Name").change(function () { postUpdate($(this), $(this).val()); });
     });
 
 </script>

}