@using DnTeam.Models
@{
    ViewBag.Title = Resources.Labels.Clients_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resources.Labels.Clients_Title</h2>
<h4>@Resources.Labels.Multiple_Values_Hint @Html.TextBox("MultipleClientValue","",new {@style = "width:700px"}) <input type="button" class="t-button" value="@(Resources.Labels.Add_Button)" onclick="addMultipleClientValue()"/> </h4>  
<p>
    <a id="editValue" class="t-button t-button-icontext"><span class="t-icon t-edit"></span>@Resources.Labels.Client_Edit_Selected</a>
    <a id="deleteValues" class="t-button t-button-icontext"><span class="t-icon t-delete"></span>@Resources.Labels.Client_Delete_Selected</a>
    <a id="clearFilter" class="t-button t-button-icontext"><span class="t-icon t-clear-filter"></span>@Resources.Labels.Clear_Filter</a> 
</p>

@(Html.Telerik().Grid<ClientModel>()
        .Name("ClientsGrid").Sortable()
        .DataBinding(dataBinding => dataBinding.Ajax().Select("Select", "Client"))
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Sortable(false).ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= Id #>' />").Title("").Width(50).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.Name).HeaderHtmlAttributes(new { filterable_column = "Name" });
        })
)

@{Html.Telerik().Window().Name("ValueEditWindow").Title(Resources.Labels.Window_Title_Edit).Content(
      @<text>
                @Html.Hidden("ClientId")
                <div class="editLine">
                    <div class="editElement">
                        <div class="editor-label">
                            @Resources.Labels.Client_Name
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("Name")                      
                        </div>
                    </div>                    
                </div>                
                <div class="editLine" style="padding-top: 20px;">
                    <a class="t-button t-button-icontext yesButton" onclick="updateValue()"><span class="t-icon t-insert"></span><label>@Resources.Labels.Window_Button_Save</label></a>
                    <a class="t-button t-button-icontext noButton" onclick="closeWindow('ValueEditWindow')"><span class="t-icon t-cancel"></span><label>@Resources.Labels.Window_Button_Cancel</label></a>
                </div>
      </text>).Visible(false).Draggable(true).Scrollable(false).Modal(true).Width(400).Render();}

@section HeadScripts {

<script type="text/javascript">
    function addMultipleClientValue() {
        $.post('@Url.Action("MultipleInsert", "Client")', { value: $("#MultipleClientValue").val() }, function () {
            $("#MultipleClientValue").val("");
            $("#ClientsGrid").data("tGrid").ajaxRequest();
        });
    }

    function updateValue() {
        $.post('@Url.Action("Save", "Client")', { id: $("#ClientId").val(), name: $("#Name").val() }, function (data) {
            if (data == null) {
                $("#ClientsGrid").data("tGrid").ajaxRequest();
                closeWindow("ValueEditWindow");
            } else {
                showError($("#Name"), data, "ValueEditWindow");
            }
        }, 'json');
    }
    
    $().ready(function () {

        //Bind grid filters
        $("#ClientsGrid").gridFilter({ postUrl: '@(Url.Action("Select", "Client"))', btnClearFilter: $("#clearFilter"), gridInstance: function () {
            return $("#ClientsGrid").data("tGrid");
        }
        });
        
        //Open edit window
        $("#editValue").click(function () {
            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this));
            });

            if (values.length != 1) {
                alert("@(Resources.Labels.Client_Error_Edit_Nothing)");
            } else {
                //get cell values
                var ths = values[0].closest('tr').children('td');
                //open edit departments window
                openEditWindow(values[0].val(), ths[1].innerHTML);
            }
        });

        function openEditWindow(id, name) {
            $("#ClientId").val(id);
            $("#Name").val(name);

            openWindow('ValueEditWindow');
        }

        //Delete selected values
        $("#deleteValues").click(function (e) {
            e.preventDefault();

            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this).val());
            });

            if (values.length <= 0) {
                alert("@(Resources.Labels.Client_Error_Delete_Nothing)");
            } else {
                if (confirm("@(Resources.Labels.Client_Delete_Are_You_Sure)")) {
                    $.ajax({
                        type: 'POST',
                        url: '@(Url.Action("Delete", "Client"))',
                        dataType: 'json',
                        traditional: true,
                        data: { values: values, type: '@ViewBag.Title' },
                        success: function () {
                            $("#ClientsGrid").data("tGrid").ajaxRequest();
                        }
                    });
                }
            }
        });
    });
</script>
}