@model IEnumerable<DnTeam.Models.PersonGridModel>

@{
    ViewBag.Title = Resources.Labels.People_Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Resources.Labels.People_Title</h2>

<p>
    <a id="addNewValue" class="t-button t-button-icontext"><span class="t-icon t-add"></span>@Resources.Labels.People_Add_a_New</a>
    <a id="editValue" class="t-button t-button-icontext"><span class="t-icon t-edit"></span>@Resources.Labels.People_Edit_Selected</a>
    <a id="viewValues" class="t-button t-button-icontext"><img class="t-icon" src="@(Url.Content("~/Content/link.png"))" />@Resources.Labels.People_View_Selected</a>
    <a id="deleteValues" class="t-button t-button-icontext"><span class="t-icon t-delete"></span>@Resources.Labels.People_Delete_Selected</a> 
    <a id="clearFilter" class="t-button t-button-icontext"><span class="t-icon t-clear-filter"></span>@Resources.Labels.Clear_Filter</a>      
</p>

@(Html.Telerik().Grid(Model)
        .Name("PeopleGrid").Sortable().Pageable() 
        .DataBinding(dataBinding => dataBinding.Ajax().Select("Select", "Person"))
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Sortable(false)
                .ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= Id #>' />").Title("").Width(50).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.Name).Width(200).HeaderHtmlAttributes(new { filterable_column = "Name" });
            columns.Bound(o => o.Location).HeaderHtmlAttributes(new { filterable_column = "Location" });
            columns.Bound(o => o.PrimaryManager).HeaderHtmlAttributes(new { filterable_column = "PrimaryManager" });
            columns.Bound(o => o.TechnologySkills).HeaderHtmlAttributes(new { filterable_column = "TechnologySkills" });
            
        }) 
)

@{Html.Telerik().Window().Name("ValueEditWindow").Title(Resources.Labels.Window_Title_Insert).Content(
      @<text>                
                <div class="editLine">
                    <div class="editElement">
                        <div class="editor-label">
                            @Resources.Labels.People_Name
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("Name")                      
                        </div>
                     </div>  
                     <div class="editElement">
                        <div class="editor-label">
                            @Resources.Labels.People_Department_Location
                        </div>
                        <div class="editor-field">
                             @(Html.Telerik().ComboBox().Name("Location").BindTo(ViewData["LocationsList"] as SelectList)
                                .Filterable(filtering => filtering.FilterMode(AutoCompleteFilterMode.StartsWith)).HighlightFirstMatch(true))
                        </div>
                    </div> 
                    <div class="editElement">
                        <div class="editor-label">
                            @Resources.Labels.People_Primary_Manager
                        </div>
                        <div class="editor-field">
                            @(Html.Telerik().ComboBox().Name("PrimaryManager").BindTo(ViewData["PersonsList"] as SelectList)
                                .Filterable(filtering => filtering.FilterMode(AutoCompleteFilterMode.StartsWith)).HighlightFirstMatch(true))
                        </div>
                    </div>                    
                </div>                   
                <div id="editResult" class="editLine"></div>            
                <div class="editLine" style="padding-top: 20px;">
                    <a class="t-button t-button-icontext yesButton" onclick="addValue()"><span class="t-icon t-insert"></span><label>@Resources.Labels.Window_Button_Insert</label></a>
                    <a class="t-button t-button-icontext noButton" onclick="closeWindow('ValueEditWindow')"><span class="t-icon t-cancel"></span><label>@Resources.Labels.Window_Button_Cancel</label></a>
                </div>
      </text>).Visible(false).Draggable(true).Scrollable(false).Modal(true).Width(600).Render();}


@section HeadScripts {
<script type="text/javascript">
    function addValue() {
        var name = $("#Name").val();
        var location = $("#Location").data("tComboBox");
        var primaryManager = $("#PrimaryManager").data("tComboBox");

        if (name.length <= 0) {
            showError($("#editResult"), "@(string.Format("{0} {1}", Resources.Labels.People_Name,Resources.Labels.Error_Is_Empty))", "ValueEditWindow");
            return;
        }

        if (location.value() == location.text()) {
            if (location.text().length > 0) {
                showError($("#editResult"), "@(Resources.Labels.People_Location_Is_Invalid)", "ValueEditWindow");
                return;
            }
        }

        if (primaryManager.value() == primaryManager.text()) {
            if (primaryManager.text().length > 0) {
                showError($("#editResult"), "@(Resources.Labels.People_Primary_Manager_Is_Invalid)", "ValueEditWindow");
                return;
            }
        }

        $.post('@Url.Action("Insert", "Person")', { name: name, location: location.value(), primaryManager: primaryManager.value() }, function (data) {
            if (data == null) {
                fillPeople(); //rebind combobox
                $("#PeopleGrid").data("tGrid").ajaxRequest();
                closeWindow("ValueEditWindow");
            } else {
                showError($("#editResult"), data, "ValueEditWindow");
            }
        }, 'json');
    }

    function fillPeople() {
        $.post('@(Url.Action("GetPeopleList", "Person"))', function (data) {
            $("#PrimaryManager").data('tComboBox').dataBind(data);
        }, "json");
    }
    
    $().ready(function () {
        
        //Bind grid filters
        $("#PeopleGrid").gridFilter({ postUrl: '@(Url.Action("Select", "Person"))', btnClearFilter: $("#clearFilter"), gridInstance: function () {
            return $("#PeopleGrid").data("tGrid");
        }});

        //Open insert window
        $("#addNewValue").click(function (e) {
            e.preventDefault();
            openWindow('ValueEditWindow');
        });

        //Delete selected values
        $("#deleteValues").click(function (e) {
            e.preventDefault();

            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this).val());
            });

            if (values.length <= 0) {
                alert("@(Resources.Labels.People_Error_Delete_Nothing)");
            } else {
                if (confirm("@(Resources.Labels.People_Delete_Are_You_Sure)")) {
                    $.ajax({
                        type: 'POST',
                        url: '@(Url.Action("Delete", "Person"))',
                        dataType: 'json',
                        traditional: true,
                        data: { values: values },
                        success: function () {
                            $("#PeopleGrid").data("tGrid").ajaxRequest();
                            fillPeople(); //rebind combobox
                        }
                    });
                }
            }
        });

        //Open edit 
        $("#editValue").click(function () {
            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this));
            });

            if (values.length != 1) {
                alert("@(Resources.Labels.People_Error_Edit_Nothing)");
            } else {
                window.location = "@(Url.Action("Edit", "Person"))/" + values[0].val();
            }
        });

        //Open details 
        $("#viewValues").click(function () {
            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this));
            });

            if (values.length != 1) {
                alert("@(Resources.Labels.People_Error_View_Nothing)");
            } else {
                window.location = "@(Url.Action("Details", "Person"))/" + values[0].val();
            }
        });
    });
</script>
}