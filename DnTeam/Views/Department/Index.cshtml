@using DnTeam.Models
<h2>Departments</h2>

<script type="text/javascript">
    
    $().ready(function () {


        //Open creation dialog
        $("#addNewDepartment").click(function (e) {
            e.preventDefault();
            openWindow('DepartmentWindow', 'Insert', 'Insert', 'addDepartment()');
        });

        //Delete selected departments
        $("#deleteDepartments").click(function (e) {
            e.preventDefault();

            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this).val());
            });

            if (values.length <= 0) {
                alert("Please, check departments to be deleted.");
            } else {
                if (confirm("Are you sure you want to delete these departments?")) {
                    $.ajax({
                        type: 'POST',
                        url: '@(Url.Action("DeleteDepartments", "Department"))',
                        dataType: 'json',
                        traditional: true,
                        data: { values: values },
                        success: function () {
                            fillDepartments(); //rebind combobox
                            $("#DepartmentsGrid").data("tGrid").ajaxRequest();
                        }
                    });
                }
            }
        });


        //Open edit window
        $("#editDepartment").click(function () {
            var values = new Array();
            $("input:checkbox[name=checkedRecords]:checked").each(function () {
                values.push($(this));
            });

            if (values.length != 1) {
                alert("Please, check one department to be edited.");
            } else {
                //get cell values
                var ths = values[0].closest('tr').children('td');
                //open edit departments window
                openEditDepartments(values[0].val(), ths[1].innerHTML, ths[2].innerHTML, ths[3].innerHTML, ths[4].innerHTML, ths[5].innerHTML);
            }
        });
    });
    
        function openEditDepartments(id, location, name, parent, rate, cost) {
            $("#DepartmentId").val(id);
            $("#Location").data("tComboBox").value(location);
            $("#Name").val(name);
            $("#ParentDepartment").data("tComboBox").value(parent);
            $("#Rate").data("tTextBox").value(rate);
            $("#Cost").data("tTextBox").value(cost);

            openWindow('DepartmentWindow', 'Edit', 'Save', 'updateDepartment()');
        };

        function addDepartment() {
            saveDepartment("");
        }

        function updateDepartment() {
            saveDepartment($("#DepartmentId").val());
        }

        function saveDepartment(id) {
            var name = $("#Name").val();
            var parent = $("#ParentDepartment").data("tComboBox");
            $.post('@(Url.Action("Save", "Department"))', {
                id: id,
                location: $("#Location").data("tComboBox").value(),
                name: name,
                parentId: parent.value(),
                parentName: parent.text(),
                rate: $("#Rate").data("tTextBox").value(),
                cost: $("#Cost").data("tTextBox").value()
            }, function(data) {

                if (data[0] == 0) {
                    closeWindow('DepartmentWindow');
                    $("#DepartmentsGrid").data("tGrid").ajaxRequest();
                    fillDepartments(); //rebind combobox
                } else {
                    //TODO: show error
                }
            });
        }

        function fillDepartments() {
            $.post('@(Url.Action("GetDepartmentsList", "Department"))', function(data) {
                $("#ParentDepartment").data('tComboBox').dataBind(data);
            }, "json");
        }
   
    
</script>
@{Html.Telerik().Window().Name("DepartmentWindow").Title("Insert").Content(
      @<text>

                @Html.Hidden("DepartmentId")
                <div class="editLine">
                    <div class="editElement">
                        <div class="editor-label">
                            Location
                        </div>
                        <div class="editor-field">
                        
                            @(Html.Telerik().ComboBox().Name("Location").BindTo(ViewData["LocationsList"] as SelectList)
                                .Filterable(filtering => filtering.FilterMode(AutoCompleteFilterMode.StartsWith)).HighlightFirstMatch(true))
                        </div>
                    </div>
                    <div class="editElement">
                        <div class="editor-label">
                            Name
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("Name")                      
                        </div>
                    </div>
                    <div class="editElement">
                        <div class="editor-label">
                            Parent Department
                        </div>
                        <div class="editor-field">
                            @(Html.Telerik().ComboBox().Name("ParentDepartment").BindTo(ViewData["DepartmentsList"] as SelectList)
                                    .Filterable(filtering => filtering.FilterMode(AutoCompleteFilterMode.StartsWith)).HighlightFirstMatch(true))
                        </div>
                    </div>
                    <div class="editElement">
                        <div class="editor-label">
                            Cost
                        </div>
                        <div class="editor-field">
                           @(Html.Telerik().CurrencyTextBox().Name("Cost").InputHtmlAttributes(new {style="width:100px"}).MinValue(0).Value(10).CurrencySymbol(" "))
                        </div>
                    </div>
                    <div class="editElement">
                        <div class="editor-label">
                            Rate
                        </div>
                        <div class="editor-field">
                            @(Html.Telerik().CurrencyTextBox().Name("Rate").InputHtmlAttributes(new { style = "width:100px" })
                                            .MinValue(0).Value(10).CurrencySymbol(" "))
                        </div>
                    </div>
                </div>
                <div id="addNewDepartmentError" class="editLine"> </div>
                <div class="editLine" style="padding-top: 20px;">
                    <a class="t-button t-button-icontext yesButton" onclick="addDepartment()"><span class="t-icon t-insert"></span><label>Insert</label></a>
                    <a class="t-button t-button-icontext noButton" onclick="closeWindow('DepartmentWindow')"><span class="t-icon t-cancel"></span><label>Cancel</label></a>
                </div>
      </text>).Visible(false).Draggable(true).Scrollable(false).Modal(true).Width(800).Render();}
<p>
    <a id="addNewDepartment" class="t-button t-button-icontext"><span class="t-icon t-add"></span>Add a New Department</a>
    <a id="editDepartment" class="t-button t-button-icontext"><span class="t-icon t-edit"></span>Edit Selected Department</a>
    <a id="deleteDepartments" class="t-button t-button-icontext"><span class="t-icon t-delete"></span>Delete Selected Departments</a>
</p>
@(Html.Telerik().Grid<DepartmentModel>()
        .Name("DepartmentsGrid")
        .DataKeys(keys => keys.Add(o => o.Id))
        .DataBinding(dataBinding => dataBinding.Ajax().Select("Select", "Department"))
        .Columns(columns =>
        {
            columns.Bound(o => o.Id).Filterable(false).Sortable(false).ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= Id #>' />").Title("").Width(50).HtmlAttributes(new { style = "text-align:center" });
            columns.Bound(o => o.Location);
            columns.Bound(o => o.Name);
            columns.Bound(o => o.ParentDepartment);
            columns.Bound(o => o.Cost).Width(70);
            columns.Bound(o => o.Rate).Width(70);
        })
        .Sortable()
        .Pageable()     
    )

<script src="@(Url.Content("~/Scripts/customTelerikGridFilter.js"))" type="text/javascript"></script>
<script type="text/javascript">
    var getGrid = function getGridInstance() {
        return $("#DepartmentsGrid").data("tGrid");
    };
   $("#DepartmentsGrid").customTelerikGridFilter({ postUrl: '@(Url.Action("GetTopSearchOffers", "Department"))', getGridInstance: getGrid });
</script>